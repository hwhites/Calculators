---
// src/pages/gpa-calculator.astro
import Layout from '../../layouts/Layout.astro';
---

<Layout title="GPA Calculator | CourseAssist">
  <div class="max-w-4xl mx-auto">
    <!-- Page Header -->
    <div class="text-center mb-12">
      <h1 class="text-4xl font-bold text-gray-800">GPA Calculator</h1>
      <p class="mt-2 text-lg text-gray-600">Enter your course credits and grades to calculate your GPA. The deafault credit value is 1</p>
    </div>

    <!-- Main Content Grid -->
    <div class="grid grid-cols-1 md:grid-cols-3 gap-8">

      <!-- Left Column: Calculator Form -->
      <div class="md:col-span-2 bg-white p-6 rounded-xl border border-gray-200 shadow-md">
        <div id="course-list" class="space-y-4">
          <!-- Course rows will be dynamically added here -->
        </div>

        <button id="add-course-btn" class="mt-6 w-full bg-blue-100 text-blue-700 font-semibold py-2 px-4 rounded-lg hover:bg-blue-200 transition-colors duration-200">
          + Add Course
        </button>
      </div>

      <!-- Right Column: Results & Actions -->
      <div class="md:col-span-1">
        <div class="bg-white p-6 rounded-xl border border-gray-200 shadow-md">
          <h2 class="text-lg font-bold text-gray-800 mb-2">Your GPA</h2>
          <p id="gpa-result" class="text-5xl font-extrabold text-gray-800">0.00</p>
          <p id="total-credits" class="text-sm text-gray-500 mt-1">Total Credits: 0</p>

          <button id="calculate-btn" class="mt-6 w-full bg-blue-600 text-white font-bold py-3 px-4 rounded-lg hover:bg-blue-700 transition-colors duration-200">
            Calculate
          </button>
        </div>
      </div>
    </div>
  </div>

  <!-- This is the template for a single course row. We will clone this with JavaScript. -->
  <template id="course-row-template">
    <div class="course-row grid grid-cols-12 gap-2 items-center">
      <input type="text" placeholder="Course Name (Optional)" class="col-span-5 p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500">
      <input type="number" placeholder="Credits" class="credits-input col-span-3 p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500" min="0" step="0.5" value="1">
      <input type="text" placeholder="A- or 92" class="grade-input col-span-3 p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500">
      <button class="remove-course-btn col-span-1 text-gray-400 hover:text-red-500 transition-colors duration-200">
        &times;
      </button>
    </div>
  </template>

  <script>
    // Grade point values for letter grades
    const gradePoints = {
      'A+': 4.0, 'A': 4.0, 'A-': 3.7, 'B+': 3.3, 'B': 3.0, 'B-': 2.7,
      'C+': 2.3, 'C': 2.0, 'C-': 1.7, 'D+': 1.3, 'D': 1.0, 'F': 0.0
    };

    // DOM Elements
    const courseList = document.getElementById('course-list');
    const addCourseBtn = document.getElementById('add-course-btn');
    const calculateBtn = document.getElementById('calculate-btn');
    const courseRowTemplate = document.getElementById('course-row-template');
    const gpaResultEl = document.getElementById('gpa-result');
    const totalCreditsEl = document.getElementById('total-credits');

    // Function to add a new course row to the list
    function addCourseRow() {
      // Clone the template content
      const newRow = courseRowTemplate.content.cloneNode(true);
      const rowDiv = newRow.querySelector('.course-row');
      courseList.appendChild(newRow);
      
      // Add event listener to the new remove button
      const removeBtn = rowDiv.querySelector('.remove-course-btn');
      removeBtn.addEventListener('click', () => {
        courseList.removeChild(rowDiv);
      });
    }

    // New function to convert numeric or letter grade to a 4.0 scale value
    function getGradePoint(input) {
      if (typeof input !== 'string' || input.trim() === '') {
        return NaN;
      }

      const trimmedInput = input.trim();
      const numericGrade = parseFloat(trimmedInput);

      // Handle numeric grades (e.g., 97, 85.5)
      if (!isNaN(numericGrade)) {
        if (numericGrade >= 97) return 4.0; // A+
        if (numericGrade >= 93) return 4.0; // A
        if (numericGrade >= 90) return 3.7; // A-
        if (numericGrade >= 87) return 3.3; // B+
        if (numericGrade >= 83) return 3.0; // B
        if (numericGrade >= 80) return 2.7; // B-
        if (numericGrade >= 77) return 2.3; // C+
        if (numericGrade >= 73) return 2.0; // C
        if (numericGrade >= 70) return 1.7; // C-
        if (numericGrade >= 67) return 1.3; // D+
        if (numericGrade >= 63) return 1.0; // D
        return 0.0; // F
      }
      
      // Handle letter grades (e.g., A-, B+)
      const letterGrade = trimmedInput.toUpperCase();
      if (gradePoints.hasOwnProperty(letterGrade)) {
        return gradePoints[letterGrade];
      }

      return NaN; // Invalid input
    }

    // Function to perform the GPA calculation
    function calculateGPA() {
      let totalQualityPoints = 0;
      let totalCredits = 0;

      const courseRows = courseList.querySelectorAll('.course-row');

      courseRows.forEach(row => {
        const creditsInput = row.querySelector('.credits-input');
        const gradeInput = row.querySelector('.grade-input');
        
        const credits = parseFloat(creditsInput.value);
        const gradePoint = getGradePoint(gradeInput.value);

        if (!isNaN(credits) && credits > 0 && !isNaN(gradePoint)) {
          totalQualityPoints += credits * gradePoint;
          totalCredits += credits;
        }
      });
      
      const gpa = totalCredits > 0 ? (totalQualityPoints / totalCredits) : 0;
      
      // Update the display
      gpaResultEl.textContent = gpa.toFixed(2);
      totalCreditsEl.textContent = `Total Credits: ${totalCredits}`;
    }

    // Event Listeners
    addCourseBtn.addEventListener('click', addCourseRow);
    calculateBtn.addEventListener('click', calculateGPA);

    // Add 4 initial course rows when the page loads
    for (let i = 0; i < 4; i++) {
      addCourseRow();
    }
  </script>
</Layout>


